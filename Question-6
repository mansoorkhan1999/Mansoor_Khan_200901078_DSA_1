R-6.6 
Give a precise and complete definition of the concept of matching for
grouping symbols in an arithmetic expression. Your definition may be
recursive

======================================CODE==========================================

def arePairs(open,close):
    if open=='[' and close==']':
        return True
    if open=='{' and close=='}':
        return True
    if open=='(' and close==')':
        return True
    return False

def Balanced(A):
    stack=[]
    for i in range(len(A)):
        if A[i]=='[' or A[i]=='{' or A[i]=='(':
            stack.append(A[i])
        elif A[i] == ']' or A[i] == '}' or A[i] == ')':
            if arePairs(stack[-1],A[i] or len(stack)!=0):
                stack.pop()
            else:
               return False
    if len(stack)==0:
        print("Balanced Expresion")
    else:
        print("Unbalanced Expresion")
A=input("Enter Parenthesis : ")
print(Balanced(A))
